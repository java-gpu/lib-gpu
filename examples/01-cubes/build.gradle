dependencies {
    implementation(project(":libJavaBgfx"))
    implementation(project(":00-example-common"))
}

tasks.register('compileShader', Exec) {
    if (rootProject.ext.isMac) {
        commandLine '/bin/zsh', "${rootProject.ext.externalBuildScript}", "executeCommandInDir", "make TARGET=5", "${layout.projectDirectory.asFile.absolutePath}/shader"
    } else if (rootProject.ext.isLinux) {
        commandLine '/bin/bash', "${rootProject.ext.externalBuildScript}", "executeCommandInDir", "make TARGET=7", "${layout.projectDirectory.asFile.absolutePath}/shader"
    } else if (rootProject.ext.isWindows) {
        commandLine "cmd", "/c", "${rootProject.ext.externalBuildScript}", "executeCommandInDir", "nmake /f nmakefile.mk TARGET=1", "${layout.projectDirectory.asFile.absolutePath}/shader"
    }
}

tasks.build.mustRunAfter compileShader
tasks.build.dependsOn compileShader

tasks.register('runExample', JavaExec) {
    dependsOn build
    mustRunAfter build
    dependsOn compileShader
    mustRunAfter compileShader

    // You can print the platform and architecture to verify
    println "Platform: $platform, Architecture: $arch"

    mainClass.set('tech.lib.cubes.StartingPoint')
    classpath = sourceSets.main.runtimeClasspath
    if (rootProject.ext.platform == "windows") {
        jvmArgs = ["-Djava.library.path=" +
                           "${layout.buildDirectory.asFile.get().absolutePath}/libs;" +
                           "${rootProject.layout.projectDirectory.asFile.absolutePath}/external/bgfx/.build/win64_vs2022/bin"
        ]
    } else if (rootProject.ext.platform == "osx") {
        jvmArgs = ["-Djava.library.path=" +
                           "${layout.buildDirectory.asFile.get().absolutePath}/libs:" +
                           "${rootProject.layout.projectDirectory.asFile.absolutePath}/external/bgfx/.build/${rootProject.ext.platform}-${rootProject.ext.arch}/bin"
        ]
    } else if (rootProject.ext.platform == "linux") {
        jvmArgs = ["-Djava.library.path=" +
                           "${layout.buildDirectory.asFile.get().absolutePath}/libs:" +
                           "${rootProject.layout.projectDirectory.asFile.absolutePath}/external/bgfx/.build/linux64_gcc/bin"
        ]
    }
    jvmArgs += [
        '-XX:+ShowMessageBoxOnError',
        '-XX:+UseOSErrorReporting'
    ]
}
